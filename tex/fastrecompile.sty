\ProvidesExplPackage{fastrecompile}{2023/03/26}{0.2.0}{Helper library to speed up LaTeX compilation}


\msg_new:nnn { fastrecompile } { end-preamble-duplicate } {
  Something~is~wrong.~If~\string\fastrecompileendpreamble\space is~used,~it~must~appear~in~a~separate~line.
}
\msg_new:nnn { fastrecompile } { end-preamble-not-main-file } {
  This~cannot~happen.~
  File~contain~\string\fastrecompileendpreamble\space command~must~be~main~file~and~contain~\string\end{document}~line.
}
\msg_new:nnn { fastrecompile } { duplicate-set-implicit-preamble } {
  ???
}


% Read the file name from the terminal and stores it in \__fast_recompile_file_name_str.
\cs_new_protected:Npn \__fast_recompile_read_str: {
  \int_set:Nn \l_tmpa_int { \interactionmode }
  \interactionmode=3~ % set interactionmode to errorstopmode so it's possible to read from terminal
  \ior_str_get_term:nN {} \__fast_recompile_file_name_str
  \interactionmode=\l_tmpa_int % restore interactionmode
}


% Read a line from standard input then \input from it. (using \input{...} instead of the primitive in order to update the current file name seen to TeX)
\cs_new_protected:Npn \fastrecompileinputreadline {
  \__fast_recompile_read_str:
  \input {\__fast_recompile_file_name_str}
}



% #1: the "line offset" which should be 2 if used from within AtEndPreamble or 1 if used from explicit \fastrecompileendpreamble
% or from begindocument/end
\cs_new_protected:Npn \__fast_recompile_end_preamble:n #1 {
  \cs_gset_eq:NN \fastrecompileendpreamble \__fast_recompile_end_preamble_duplicate_usage:


  % then \@@input from that file name
  % (we need to do this instead of just normally continue because the file has changed...)
  % but first change the category codes to gobble first X lines
  % (where X is the number of lines in the preamble which is to be computed from \inputlineno)
  % note that this will not update \currfilename etc.
  \begingroup


  % we need to handle { and } (avoid gobbling gobble multiple lines),
  % % (avoid commenting out the ^^M token),
  % and \ (avoid that at the end of a line escaping the ^^M token)
  % and also ^ (avoid accidentally creating a ^^M token)
  \catcode `{ \active
  \catcode `} \active
  \catcode `\% \active
  \catcode `^ \active
  \catcode `\\ \active


  \endlinechar 13      % should already be true but just in case
  \catcode `\^^M \active

  \int_set:Nn \l_tmpa_int { \inputlineno-#1 }  % executing \@@input will change the \inputlineno
  \expandafter \__fast_recompile_gobble_lines:
    \tex_input:D { \__fast_recompile_file_name_str }
    \msg_error:nn { fastrecompile } { end-preamble-not-main-file }
    \stop
}

\cs_new_protected:Npn \fastrecompileendpreamble {
  \__fast_recompile_read_str:
  \__fast_recompile_end_preamble:n {1}
}

\cs_gset_protected:Npn \__fast_recompile_end_preamble_duplicate_usage: {
  \msg_error:nn { fastrecompile } { end-preamble-duplicate }
}

\cs_new_protected:Npn \fastrecompilesetimplicitpreamble {
  % first read a line from the terminal (to wait for a file to change)
  % conveniently the parent process also write the file name in this line
  \AddToHook {begindocument/before} [fastrecompile] { \__fast_recompile_read_str: }
  \AddToHook {begindocument/end} [fastrecompile] { \__fast_recompile_end_preamble:n {1} }
  \cs_gset_eq:NN \fastrecompileendpreamble \__fast_recompile_end_preamble_duplicate_usage:
  \cs_gset_protected:Npn \fastrecompilesetimplicitpreamble {
    \msg_error:nn { fastrecompile } { duplicate-set-implicit-preamble }
  }
}


\cs_new_protected:Npn \__fast_recompile_gobble_lines: {
  \__fast_recompile_gobble_lines:fw { \int_use:N \l_tmpa_int }
}

\begingroup
\catcode `\^^M \active
\cs_new_protected:Npn \__fast_recompile_gobble_lines:nw #1 #2 ^^M {
  % #1 is the number of remaining lines to be gobbled
  % #2 is the line content, to be discarded
  \int_compare:nNnTF { #1 } > { 0 } {
    \__fast_recompile_gobble_lines:fw { \int_eval:n { #1-1 } }
  } {
    \endgroup
  }
}
\endgroup

\cs_generate_variant:Nn \__fast_recompile_gobble_lines:nw { f }

